<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oracle.dao.BizPartsrepertoryMapper">
  <resultMap id="BaseResultMap" type="oracle.mybatis.vo.BizPartsrepertory">
    <id column="PartsRepId" jdbcType="INTEGER" property="partsrepid" />
    <result column="PartsId" jdbcType="INTEGER" property="partsid" />
    <result column="PartsReqCount" jdbcType="INTEGER" property="partsreqcount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PartsRepId, PartsId, PartsReqCount
  </sql>
  <select id="selectByExample" parameterType="oracle.mybatis.vo.BizPartsrepertoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biz_partsrepertory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from biz_partsrepertory
    where PartsRepId = #{partsrepid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biz_partsrepertory
    where PartsRepId = #{partsrepid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="oracle.mybatis.vo.BizPartsrepertoryExample">
    delete from biz_partsrepertory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="oracle.mybatis.vo.BizPartsrepertory">
    insert into biz_partsrepertory (PartsRepId, PartsId, PartsReqCount
      )
    values (#{partsrepid,jdbcType=INTEGER}, #{partsid,jdbcType=INTEGER}, #{partsreqcount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="oracle.mybatis.vo.BizPartsrepertory">
    insert into biz_partsrepertory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="partsrepid != null">
        PartsRepId,
      </if>
      <if test="partsid != null">
        PartsId,
      </if>
      <if test="partsreqcount != null">
        PartsReqCount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="partsrepid != null">
        #{partsrepid,jdbcType=INTEGER},
      </if>
      <if test="partsid != null">
        #{partsid,jdbcType=INTEGER},
      </if>
      <if test="partsreqcount != null">
        #{partsreqcount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="oracle.mybatis.vo.BizPartsrepertoryExample" resultType="java.lang.Long">
    select count(*) from biz_partsrepertory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update biz_partsrepertory
    <set>
      <if test="record.partsrepid != null">
        PartsRepId = #{record.partsrepid,jdbcType=INTEGER},
      </if>
      <if test="record.partsid != null">
        PartsId = #{record.partsid,jdbcType=INTEGER},
      </if>
      <if test="record.partsreqcount != null">
        PartsReqCount = #{record.partsreqcount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update biz_partsrepertory
    set PartsRepId = #{record.partsrepid,jdbcType=INTEGER},
      PartsId = #{record.partsid,jdbcType=INTEGER},
      PartsReqCount = #{record.partsreqcount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="oracle.mybatis.vo.BizPartsrepertory">
    update biz_partsrepertory
    <set>
      <if test="partsid != null">
        PartsId = #{partsid,jdbcType=INTEGER},
      </if>
      <if test="partsreqcount != null">
        PartsReqCount = #{partsreqcount,jdbcType=INTEGER},
      </if>
    </set>
    where PartsRepId = #{partsrepid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="oracle.mybatis.vo.BizPartsrepertory">
    update biz_partsrepertory
    set PartsId = #{partsid,jdbcType=INTEGER},
      PartsReqCount = #{partsreqcount,jdbcType=INTEGER}
    where PartsRepId = #{partsrepid,jdbcType=INTEGER}
  </update>
  
  <select id="getPartsrep" resultType="map">
   select b1.PartsId,partsname,PartsReqCount from biz_parts b1,biz_partsrepertory b2 where b1.PartsId=b2.Partsid
  </select>
  
  <select id="getPartsrepBynameOrid" resultType="map">
   select b1.PartsId,partsname,PartsReqCount from biz_parts b1,biz_partsrepertory b2 where b1.PartsId=b2.Partsid
    <if test="partsid != null">
        and b1.partsid=#{partsid}
      </if>
      <if test="partsname != null">
        and b1.partsname like concat("%",#{partsname},"%")
      </if>
  </select>
  
  <update id="updateCount">
     update biz_partsrepertory set partsreqcount=partsreqcount+#{partsreqcount} 
     where partsid=#{partsid}
  </update>
  
  <select id="getCount" parameterType="Integer" resultType="Integer">
    select partsreqcount from biz_partsrepertory where partsid=#{partsid}
  </select>
  
</mapper>